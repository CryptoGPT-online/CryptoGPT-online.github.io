java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/tika/tika-core/tika-core-1.17-SNAPSHOT.jar > /Users//Desktop/paper/cryptogpt/codex/temp
Ruleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: r10
		Type: java.io.InputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: 9b24797bcb50c1de99f07c8179efb9eb361c3a6f33f186fd27997ff1ac102f63
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: 83b577d859b83eac23900ecc971d9c9a48db6cf31c4713a050afb8539086d567
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r1, r7)
		Method: <org.apache.tika.parser.digest.InputStreamDigester: java.security.MessageDigest newMessageDigest()>
		SHA-256: c42666987c6c24c6e832a184d167156e9523f4d084e6d546b09e948d3a6ac84b
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: dc72bee6761fdfcb86638d139569f9fe9aededc66e2ff106b69afebea7789a21
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: f96a57cd8d6aebeae3f74e62c25cf66a1174203c1d32b241d47c5f500bab7a66
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
		Method: <org.apache.tika.parser.CryptoParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>
		SHA-256: ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.tika.parser.digest.InputStreamDigester: boolean digestStream(java.io.InputStream,org.apache.tika.metadata.Metadata)>
		SHA-256: 1887184b1d9135fc082eb5ef80c4c089956e70f1bd1f6594a3ebc91a25927057
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.tika.parser.digest.InputStreamDigester: java.security.MessageDigest newMessageDigest()>
		SHA-256: b00569a64e6f512296f19f2748cbb95371e93e6e69b4bb3a4876bfba5cfb6d62
		Secure: true

Findings in Java Class: org.apache.tika.parser.CryptoParser

	 in Method: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(varReplacer1492, r5, r7, r9)
			at line: 92

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(varReplacer1492, r5, r7, r9)
			at line: 92

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, updateAAD, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
			at line: 101

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f96a57cd8d6aebeae3f74e62c25cf66a1174203c1d32b241d47c5f500bab7a66)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, updateAAD, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
			at line: 101

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
			at line: 101

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer1496, r5, r9)
			at line: 96

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1497, r5)
			at line: 98

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(varReplacer1492, r5, r7, r9)
			at line: 92

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer1496, r5, r9)
			at line: 96

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
			at line: 79

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f96a57cd8d6aebeae3f74e62c25cf66a1174203c1d32b241d47c5f500bab7a66)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
			at line: 79

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1497, r5)
			at line: 98

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer1495, r5, r7)
			at line: 94

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ea5ccf3af4cfb3d6ae2f4c3bf5cbb73660a0356eeb13a9677dbe9e3927540a5b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
			at line: 81

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f96a57cd8d6aebeae3f74e62c25cf66a1174203c1d32b241d47c5f500bab7a66)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
			at line: 81

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #dc72bee6761fdfcb86638d139569f9fe9aededc66e2ff106b69afebea7789a21)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r10, r18)
			at line: 101

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer1495, r5, r7)
			at line: 94


Findings in Java Class: org.apache.tika.parser.digest.InputStreamDigester

	 in Method: boolean digestStream(java.io.InputStream,org.apache.tika.metadata.Metadata)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b00569a64e6f512296f19f2748cbb95371e93e6e69b4bb3a4876bfba5cfb6d62)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
			at line: 180

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c42666987c6c24c6e832a184d167156e9523f4d084e6d546b09e948d3a6ac84b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
			at line: 180


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 8

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 9
	IncompleteOperationError: 7
	TypestateError: 2
	ForbiddenMethodError: 1

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 8
		CryptoAnalysisTime (in ms): 374
		CallgraphConstructionTime (in ms): 1018
		CallgraphReachableMethods: 5064
		CallgraphReachableMethodsWithActiveBodies: 3293
		DataflowVisitedMethods: 6
=========================================================================

java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/activemq-artemis/artemis-commons/artemis-commons-2.5.0-SNAPSHOT.jar
Ruleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer401)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String decode(java.lang.String)>
		SHA-256: 252a6fd39c211d90ab8b09787ad28f4f7c389f04895faff3a9edc8b925989a00
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r8, r4, i0, $i2)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: boolean verify(char[],java.lang.String)>
		SHA-256: 7813e0050cf4e7002383a03654c6e5a5dc35766129f9a0abd9d2e99cc5e01956
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke r0.<java.util.Random: void nextBytes(byte[])>($r2)
		Method: <org.apache.activemq.artemis.utils.UUIDTimer: void initCounters(java.util.Random)>
		SHA-256: e3ecf99ec393fe509fcd2c8f07040bcab866e95f10431b34d30739fd5eca0fdb
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer407)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String encode(java.lang.String)>
		SHA-256: ef348f6492573b534de106f136b19f1517f834957c045a73bc2f9b5fdcc0ec2d
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.util.Random: void nextBytes(byte[])>(r2)
		Method: <org.apache.activemq.artemis.utils.UUIDGenerator: byte[] generateDummyAddress()>
		SHA-256: fdff877c898b4adeb37f92308a6670c4fa063336110002f6fbee67467b1706c2
		Secure: true
	Object:
		Variable: varReplacer401
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer401)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String decode(java.lang.String)>
		SHA-256: cc95abc61b7648c71528d84c19cd16177d0ca52fe2dc6c3e49a48a6e2dd9159
		Secure: true
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String encode(java.lang.String)>
		SHA-256: 34e1d615ee512c43a4505fef93473d66095c94f770cde8b1506a04e637d34b40
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String encode(java.lang.String)>
		SHA-256: f605e6cfa5d97f9d85cdc81e627f64812c6197ae92aeffd0942f597074b5830c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: void <init>(org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec,java.util.Map)>
		SHA-256: a05e6632752ee56312cabe6c156999bd1e68389362c19b9aed78d4f577ade1f8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.activemq.artemis.utils.UUIDGenerator: java.util.Random getRandomNumberGenerator()>
		SHA-256: 2631ff7b237de37c327b0a40386d9c385843e1602ac8c6b1ed33f6f9ef2c116b
		Secure: true
	Object:
		Variable: $i2
		Type: int
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r8, r4, i0, $i2)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: boolean verify(char[],java.lang.String)>
		SHA-256: 28db40541148796328175a04d7b7cce04d1fd4e1620234980e2ba7c27ae8fbce
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: void <init>(org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec,java.util.Map)>
		SHA-256: 61e8c714da0983334a3704bf0ae85d51aa49243a954467d07b473b243540a6cc
		Secure: true
	Object:
		Variable: varReplacer410
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String encode(java.lang.String)>
		SHA-256: fafb710efc2bfde513d52bcd768264c549652c4fa963a9285a9055e44466f830
		Secure: true
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, $i2, $i1)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: java.lang.String encode(java.lang.String)>
		SHA-256: 28412507569eeab4511f6fcf742ed31abe0cc60dac122f2e0cb2f8007b727b54
		Secure: true
	Object:
		Variable: r16
		Type: byte[]
		Statement: r16 = virtualinvoke r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r13)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String decode(java.lang.String)>
		SHA-256: 8e8e3257b9dee2ba74700e1ff205e7d81d81579b42eeaf768af2f8945ab9a4e7
		Secure: true
	Object:
		Variable: r13
		Type: byte[]
		Statement: r16 = virtualinvoke r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r13)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String decode(java.lang.String)>
		SHA-256: 3c38085488a6fa7e7268a7b55d48c58b00b58317d384aa501611035638c63470
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, $i2, $i1)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm: java.lang.String encode(java.lang.String)>
		SHA-256: 194b319ed822ede9578deebc1944ed9b04388aafefd20b4f0d6eeb5b7a9bd851
		Secure: true
	Object:
		Variable: r15
		Type: javax.crypto.Cipher
		Statement: r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer402)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String decode(java.lang.String)>
		SHA-256: db007cc5b12fe612f23214c353f934d8ba2e2ea5b43b8c6452a5154d6ee00bd5
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410)
		Method: <org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm: java.lang.String encode(java.lang.String)>
		SHA-256: 447e6ca351761fac2402f1587e7c74a86d9bbe0e44744b97f987e63968953b6a
		Secure: true

Findings in Java Class: org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$PBKDF2Algorithm

	 in Method: java.lang.String encode(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, $i2, $i1)
			at line: 217

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #194b319ed822ede9578deebc1944ed9b04388aafefd20b4f0d6eeb5b7a9bd851)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, $i2, $i1)
			at line: 217

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #194b319ed822ede9578deebc1944ed9b04388aafefd20b4f0d6eeb5b7a9bd851)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, $i2, $i1)
			at line: 217

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #194b319ed822ede9578deebc1944ed9b04388aafefd20b4f0d6eeb5b7a9bd851)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r14 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r12)
			at line: 219


	 in Method: boolean verify(char[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7813e0050cf4e7002383a03654c6e5a5dc35766129f9a0abd9d2e99cc5e01956)
			Third parameter (with value 0) Variable iterationCount must be at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r8, r4, i0, $i2)
			at line: 233

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r8, r4, i0, $i2)
			at line: 233

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7813e0050cf4e7002383a03654c6e5a5dc35766129f9a0abd9d2e99cc5e01956)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r9)
			at line: 237


Findings in Java Class: org.apache.activemq.artemis.utils.DefaultSensitiveStringCodec$BlowfishAlgorithm

	 in Method: java.lang.String decode(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #252a6fd39c211d90ab8b09787ad28f4f7c389f04895faff3a9edc8b925989a00)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer401)
			at line: 145

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer401)
			at line: 145

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #db007cc5b12fe612f23214c353f934d8ba2e2ea5b43b8c6452a5154d6ee00bd5)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer402)
			at line: 166

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer406, r3)
			at line: 167


	 in Method: java.lang.String encode(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ef348f6492573b534de106f136b19f1517f834957c045a73bc2f9b5fdcc0ec2d)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer407)
			at line: 177

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410)
			at line: 175

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer408, r3)
			at line: 178

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #447e6ca351761fac2402f1587e7c74a86d9bbe0e44744b97f987e63968953b6a)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410)
			at line: 175


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 19

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 5
	HardCodedError: 1
	IncompleteOperationError: 2
	NeverTypeOfError: 1
	RequiredPredicateError: 6

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 19
		CryptoAnalysisTime (in ms): 20580
		CallgraphConstructionTime (in ms): 848
		CallgraphReachableMethods: 4472
		CallgraphReachableMethodsWithActiveBodies: 2578
		DataflowVisitedMethods: 1729
=========================================================================
java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/deltaspike/deltaspike/core/impl/deltaspike-core-impl-1.8.1-SNAPSHOT.jar
Ruleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer92)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: c8881f9bb82d2d9ae0d172708d5b233bbcae614ae10f57c6b86ac5972882ec1d
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: ab70390647d909bd6b711de96fa6fc5a8a2805dc9efba01fe2a5da095453f810
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 51b2ea453e46badf34bfdc751e47765e0b0fe458980c37e23318b3a5aae29491
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: 7b184ea627053fd8a74f8e98d84fded0ec43baa6bbf0f82b9a0062bf71095154
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer94)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: 72c77d20f3e72777d34f5f6fa018489212ade348de278e5e0e969e0f6decde0f
		Secure: true
	Object:
		Variable: varReplacer96
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer96)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)>
		SHA-256: a105391e48d59df2d62a892292024a04cf950ee38ec31ac7d66dea5b43012f34
		Secure: true
	Object:
		Variable: r7
		Type: java.security.MessageDigest
		Statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer91)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 849a9464163021d3b057c9d0dbc7649548b7ec7642fb216fac10da164d619645
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer96)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)>
		SHA-256: e451db5f214dd9d467891ee99342a2dc01a6b221c2369203c97c6549e84066ab
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] secureHash(java.lang.String)>
		SHA-256: 1a41154f09599696507272d4693a95d7e4a1b0bd99f6cc80fe2b3d3cd7069de3
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: byte[] aesEncrypt(java.lang.String,java.lang.String)>
		SHA-256: ebd1661bceec78a9463584c4aa722855299360d58af1d93c8dff55357d6f3ac
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.deltaspike.core.impl.crypto.DefaultCipherService: java.lang.String aesDecrypt(byte[],java.lang.String)>
		SHA-256: 20d5dba12780f80d9efed53fe03cf12f5b3e0064db47decc125056f46360062a
		Secure: true

Findings in Java Class: org.apache.deltaspike.core.impl.crypto.DefaultCipherService

	 in Method: byte[] aesEncrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c8881f9bb82d2d9ae0d172708d5b233bbcae614ae10f57c6b86ac5972882ec1d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer92)
			at line: 154

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer93, r9)
			at line: 155


	 in Method: java.lang.String aesDecrypt(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #72c77d20f3e72777d34f5f6fa018489212ade348de278e5e0e969e0f6decde0f)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer94)
			at line: 173

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95, r9)
			at line: 174


	 in Method: javax.crypto.spec.SecretKeySpec getSecretKeySpec(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer96)
			at line: 189


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 11

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 3

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 11
		CryptoAnalysisTime (in ms): 235
		CallgraphConstructionTime (in ms): 770
		CallgraphReachableMethods: 3405
		CallgraphReachableMethodsWithActiveBodies: 1781
		DataflowVisitedMethods: 18
=========================================================================
java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/directory-server/kerberos-codec/apacheds-kerberos-codec-2.0.0-M25-SNAPSHOTRuleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r6.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: cdb07c754da7b25a34ed1e616f84bbada5d701d1b5d3b5f1f20e59855d406d21
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 132fc1616ded882277a82d4d4a956be79991c743ca20c22833d5b8dc7354862c
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer60)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 8aae1444c743e9427bc8aef356a7e1325ca86a6f32fde8aee590659f2f0c5a58
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer39)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 10f6081b8619941faf9c9fa85ccd880539dbb6155942fc466f26dbf6b1bf65c9
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 3f333c55c6d3b449b2dca60b9dbfe5bb7995609e7f73498f384d6f2dd2c48548
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 7fd876355f39289cb6f9210028d4ca323c103a331265c24adcc5f6fed1d5094a
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer112)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: db939d76ea906b3fcb601cd79c0cb11560c58ba034fd531b4ea584032e0d8b8a
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 442aa315c9c0a0c7e408e2626e6a9af170f1186f9087d4b55b00e4916e1d7db
		Secure: true
	Object:
		Variable: varReplacer154
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer154)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: f6df28d8fa84e0d55930504a635b8e1feb81390cdae27fdcd580ee5b6e4b98c8
		Secure: true
	Object:
		Variable: varReplacer112
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer112)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 1e4f5c5cb039eef59a4e0538db5f2e853c9b5b5b71d68c149eb1ae2a7c8c4a7f
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: afc9a5670ef9a6402bc4b73490f4959760ba789aebc14668aecd705d5198271a
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 508255668028559fbaa39a28116825b187a6ce22bd81bf32c2fe12d6cf491810
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer116)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: f3bbacf4ff486b5aff0b7b85cf7c8b0fde3158339b5148ec191f18d47955822a
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer129)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: aadea88e8e920049ebf727d1625aaab1a7f745921dcdd6b03a383ac1b18b6ae
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 122a24ebb0261bef9c1d6876b979e8012e987f083694229cb0c529048e75578d
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Mac
		Statement: r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer70)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: cb4d5571ae1a91f5feb114f59652f94323ce41c14a7a0f160f17926cddb235fd
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer59)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 518e9c8d2b38e6d2e527240e18e2eb23528c6d825c875ea388382fc6bfeb977b
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 4bf2f50e95671194593814a68c7a589ff680e7ceabf0a48126e2df5a8d243a62
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 84178fac38e6ff033421991731e19152f409399c5e1419f8cea29edb4d42fe8c
		Secure: true
	Object:
		Variable: varReplacer39
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer39)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 2fd5758c96c23236df33a087fdbf9cd29f609e47223f7d51ee78e92c00a6e412
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: dbf89fd7721a805d01e868b3484328f55558ce843912a0d33d86d46286c96574
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer119)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: d4519ef8b777675690edfcef4940106866a8f23c9d92f08d61aef7dc90f85f6b
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer126)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 417cbc87748af1c4d01e84f1ca203bbc0abdbbbb1579b3c066ff930be88f3aaa
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 438ff0df76ff39cf010fcd26a70ef5c3c599c10216418453da3fc5e8ee85576e
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: f0ad61da099af7f4021c1b04f85729d351c97bc3b01f2ba81ddfb7c75b187395
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer40)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: bf4f269fad73d021923656310493c02634c4f2946313f8194612e91994692245
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 53ed9eb9816c0071a84c50d9a0ed9ae0cef2d4b3be0bc5e7353fcc9e8bb2f8d1
		Secure: true
	Object:
		Variable: varReplacer129
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer129)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: aaefdd99067049be6a964d1a7002becdc5b0ba85381469274ee93fdbde0a86c1
		Secure: true
	Object:
		Variable: varReplacer118
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer118)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: dde310b78d3ee10c5347221e3ca0bee5a1776294ae2015c6a5435ccc5b11db1d
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: f4e118e7c68c3a51ceab9bca9a34e32dd2e355a3398394d0680894a9870962ed
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 2d5b3a644f5a9f843d26f2f425d24f5813bffab5f5ca37286ffd0e0e3b84079e
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer118)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 227469d54436e3a83b6d7018d1ea8ba743f5615a8e39f57c31aa2a34b18f606e
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r6.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: ecff8876da805f8507645fa15701f9525851b50a4ff5f264a9a8b29ec7fa11d8
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.SecretKey
		Statement: r6 = virtualinvoke r18.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: 9e63880333729266f1217bdac9e83e73f25567bbdb0e9553a71705f435742e6e
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.EncryptionEngine: void <clinit>()>
		SHA-256: ca7fce5ab181b1ea41de8aaf3ebfd1bd93ab8f4361775b855358b7e4ba38bec1
		Secure: true
	Object:
		Variable: varReplacer64
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer64)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 4ae8c149831530a3fd6eea949bd9df19328c884b6a7b706c9589fa4f1628f4ce
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: $r3 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: cef5caff6f240f687ebb421587c160944971667984c792099b8dfe1a5f6e4b87
		Secure: true
	Object:
		Variable: varReplacer59
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer59)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: d03e7f285c728e276547df19b47edd8d4938406118adf8a621e552382358c197
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: ddd67e4094b86a1d220928f9283f0c820ce719308a9d556aff4590506865a2a7
		Secure: true
	Object:
		Variable: varReplacer75
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer75)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 880f36914ebb20d766261b310dea35e549d07d88d8d447e463f603664d8ed72b
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: ee027715f8f7ba23a10c655a062268fbbeb787eeb635c3c4c956bf62f2dfa404
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer154)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: ea3eed4e5cc3e53842c63eb01ee00ee2657a57532774b16814263c636018db5f
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 7423713220c29031630b4d4f746e763f9446e59125b0cad783b303140367dba0
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: cafd304da93926fed37aa834571971bccb373316281c29855f047154c3833bf7
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer64)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 8ba33129aa7e34c97b589437d12185ad1c80e282da635c511a9f572b04f82783
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 6bcc5f95df262cb1d408aa671df01dc409fbc1ebc4ca33b215ce8af32304a3c9
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: b745bd699452699b110c7fca5ff737b9374dd21eea4cc30c2f8e39e350b11d6d
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer150)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 393ceca002a025b1914b59a058f7d1c0394d3793adf4a71fb8b564d785380eab
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: $r3 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 2491de39454279e02088969a212f93ee10ef64688549b4e687d400ff16b201ad
		Secure: true
	Object:
		Variable: r8
		Type: java.security.MessageDigest
		Statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.checksum.RsaMd5Checksum: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: a1bda94b3f5b37815fab08ee1ee9c3bbad8a28295ae23c4c44229e05cf26d01f
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer75)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 448bc3f7ebd44b95d26ad7c898bc1f793356f8d11e8b0f1c363bdddafb2b21ee
		Secure: true
	Object:
		Variable: varReplacer140
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer140)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: c6b58d39e85880d807c287b11041f22f645d48e66c9149aa14eb1d240fd4bb1d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: bc49b1735840a69740e9ef8358fbada23e49c4db54e095db839f741138a7a5a5
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: r6 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey: byte[] calculateChecksum(byte[],byte[])>
		SHA-256: 214d1181785cbd193082a989789eaa91adccd99df3f81a10c1fc60917e86a335
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer140)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: d1abaae1903b741087e18a53e18851a50f742cf4e0af0ecebb53088088c94119
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 6c9c2e4b70cf362cf856b7cc4c6238961264a4f34841b40570876f655c16ce33
		Secure: true
	Object:
		Variable: r8
		Type: java.security.MessageDigest
		Statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)>
		SHA-256: 5ffa3787e5e09452514f78299cb9089a7bd59a55fb8038c4d0995281c9753986
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption: byte[] processChecksum(byte[],byte[])>
		SHA-256: 6007b84eff1778a956bb847be1b954bb9631ddbd605c92262eed740edefcee6f
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 36733128749e6e3515be24a961a316d4411c23f7eb27ef7b8a7e31aa2f6e30
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer73)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: 75a61fd2027d0fc47f4900c24c95313fb22e7df8b566b33b311988fac863d8e0
		Secure: true
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = interfaceinvoke r6.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: be19df9f386cdd5619edd05074da3efc64e041dfacf35061c13282166628d15
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption: byte[] processCipher(boolean,byte[],byte[])>
		SHA-256: f0a38fc8f004151a266cc516272ad03b1b44f309f4a8f1380822acd892532781
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.KeyGenerator
		Statement: r18 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r3)
		Method: <org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)>
		SHA-256: 87642d5fa5f2f3d2576fd43001ebede5ad709f2ff33b63af24538ec0d811b2ef
		Secure: false

Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.checksum.HmacMd5Checksum

	 in Method: byte[] calculateChecksum(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Mac: void init(java.security.Key)>(r8)
			at line: 51

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #bf4f269fad73d021923656310493c02634c4f2946313f8194612e91994692245)
			First parameter (with value "HmacMD5") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer40)
			at line: 50

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer39)
			at line: 48

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #10f6081b8619941faf9c9fa85ccd880539dbb6155942fc466f26dbf6b1bf65c9)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer39)
			at line: 48


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption

	 in Method: byte[] processChecksum(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Mac: void init(java.security.Key)>(r7)
			at line: 159

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8aae1444c743e9427bc8aef356a7e1325ca86a6f32fde8aee590659f2f0c5a58)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer60)
			at line: 158

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer59)
			at line: 156


	 in Method: byte[] processCipher(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer64)
			at line: 176

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer61, r2, r5)
			at line: 186

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65, r2, r5)
			at line: 182

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
			at line: 178


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption

	 in Method: byte[] calculateIntegrity(byte[],byte[],org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #cb4d5571ae1a91f5feb114f59652f94323ce41c14a7a0f160f17926cddb235fd)
			First parameter (with value "HmacMD5") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer70)
			at line: 88

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #cb4d5571ae1a91f5feb114f59652f94323ce41c14a7a0f160f17926cddb235fd)
			Unexpected call to method doFinal on object of type javax.crypto.Mac. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke r6.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
			at line: 89


	 in Method: byte[] processCipher(boolean,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #448bc3f7ebd44b95d26ad7c898bc1f793356f8d11e8b0f1c363bdddafb2b21ee)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer75)
			at line: 103

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #75a61fd2027d0fc47f4900c24c95313fb22e7df8b566b33b311988fac863d8e0)
			First parameter (with value "ARCFOUR") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer73)
			at line: 102

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer72, r2)
			at line: 111

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer76, r2)
			at line: 107

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer75)
			at line: 103


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #db939d76ea906b3fcb601cd79c0cb11560c58ba034fd531b4ea584032e0d8b8a)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer112)
			at line: 268

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer113, r2, r5)
			at line: 274

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer115, r2, r5)
			at line: 278

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
			at line: 270

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f3bbacf4ff486b5aff0b7b85cf7c8b0fde3158339b5148ec191f18d47955822a)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer116)
			at line: 267

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer112)
			at line: 268


	 in Method: byte[] processChecksum(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #227469d54436e3a83b6d7018d1ea8ba743f5615a8e39f57c31aa2a34b18f606e)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer118)
			at line: 295

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer118)
			at line: 295

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Mac: void init(java.security.Key)>(r7)
			at line: 298

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #d4519ef8b777675690edfcef4940106866a8f23c9d92f08d61aef7dc90f85f6b)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer119)
			at line: 297


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcCrcEncryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
			at line: 161

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer127, r2, r5)
			at line: 165

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer130, r2, r5)
			at line: 169

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #aadea88e8e920049ebf727d1625aaab1a7f745921dcdd6b03a383ac1b18b6ae)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer129)
			at line: 159

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #417cbc87748af1c4d01e84f1ca203bbc0abdbbbb1579b3c066ff930be88f3aaa)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer126)
			at line: 158

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer129)
			at line: 159


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption

	 in Method: byte[] processCipher(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
			at line: 161

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer139, r2, r5)
			at line: 165

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer143, r2, r5)
			at line: 169

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d1abaae1903b741087e18a53e18851a50f742cf4e0af0ecebb53088088c94119)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer140)
			at line: 159

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ee027715f8f7ba23a10c655a062268fbbeb787eeb635c3c4c956bf62f2dfa404)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)
			at line: 158

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer140)
			at line: 159


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.DesStringToKey

	 in Method: byte[] calculateChecksum(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ea3eed4e5cc3e53842c63eb01ee00ee2657a57532774b16814263c636018db5f)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer154)
			at line: 268

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #393ceca002a025b1914b59a058f7d1c0394d3793adf4a71fb8b564d785380eab)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer150)
			at line: 267

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer154)
			at line: 268

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer153, r2, r4)
			at line: 272

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)
			at line: 270

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer153, r2, r4)
			at line: 272


Findings in Java Class: org.apache.directory.server.kerberos.shared.crypto.encryption.RandomKeyFactory

	 in Method: org.apache.directory.shared.kerberos.components.EncryptionKey getRandomKey(org.apache.directory.shared.kerberos.codec.types.EncryptionType)
		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #87642d5fa5f2f3d2576fd43001ebede5ad709f2ff33b63af24538ec0d811b2ef)
			Unexpected call to method init on object of type javax.crypto.KeyGenerator. Expect a call to one of the following methods generateKey
			at statement: virtualinvoke r18.<javax.crypto.KeyGenerator: void init(int)>(varReplacer191)
			at line: 127


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 63

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 29
	ConstraintError: 16

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 63
		CryptoAnalysisTime (in ms): 19850
		CallgraphConstructionTime (in ms): 1121
		CallgraphReachableMethods: 5167
		CallgraphReachableMethodsWithActiveBodies: 3901
		DataflowVisitedMethods: 3166
=========================================================================
java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/incubator-taverna-workbench/taverna-perspective-myexperiment/taverna-perspective-myexperiment-3.1.0-incubating-SNAPSHOT.jarRuleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2778)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 615bd4698b50db08704adc31ccc94659092723a8a7ec351909188e332498712f
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r9, varReplacer2776)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 1cc317960077c42f0b183a66a6154afa9a8ba457fc17d213c2702656984b840d
		Secure: true
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 6bdb3660b400e18dab127f64d07122f60aa9b9455d885796828c8f7c1dfc8dbc
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: r14 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 1e19b43b568567b42a83ce0b2ac80ce0b85989b5701393d09249c0e5147f9db7
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: f1f542968c247f76e7110adc2ef4e82b5c402f5cb79f4ab117f9884b58c48b7d
		Secure: true
	Object:
		Variable: r26
		Type: javax.crypto.SecretKeyFactory
		Statement: r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2780)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: e6319ba3f0f5824307666d711085bbca69778d730861dca3249d78b48207d049
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2781)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: 3ea325e2236b9168afe0bc49a359c41f1404a99ec3c9c354a0d77ff7d80cb4b5
		Secure: true
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13)
		Method: <org.apache.taverna.ui.perspectives.myexperiment.model.Util: byte[] doEncryption(java.lang.String,int)>
		SHA-256: b278e040dc73c10b26ff7b8e2bbdfe96f2574408ff1135f186d90060124b7c00
		Secure: true

Findings in Java Class: org.apache.taverna.ui.perspectives.myexperiment.model.Util

	 in Method: byte[] doEncryption(java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #615bd4698b50db08704adc31ccc94659092723a8a7ec351909188e332498712f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2778)
			at line: 97

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: r4 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
			at line: 96

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r2)
			at line: 95

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r9, varReplacer2776)
			at line: 103

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3ea325e2236b9168afe0bc49a359c41f1404a99ec3c9c354a0d77ff7d80cb4b5)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2781)
			at line: 105

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r4, r27)
			at line: 106

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e6319ba3f0f5824307666d711085bbca69778d730861dca3249d78b48207d049)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2780)
			at line: 94

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKey
			Return value was not properly generated as generatedKey
			at statement: r4 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
			at line: 96

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #1cc317960077c42f0b183a66a6154afa9a8ba457fc17d213c2702656984b840d)
			Second parameter (with value 20) Variable iterationCount must be at least 10000
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r9, varReplacer2776)
			at line: 103


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 8

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 4
	RequiredPredicateError: 4

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 8
		CryptoAnalysisTime (in ms): 289
		CallgraphConstructionTime (in ms): 1065
		CallgraphReachableMethods: 4052
		CallgraphReachableMethodsWithActiveBodies: 2133
		DataflowVisitedMethods: 4
=========================================================================

java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/manifoldcf/framework/core/mcf-core-2.9-SNAPSHOT.jarRuleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = interfaceinvoke r7.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 4c392501ded0564aa90491056bbb5b620b0f3b4e138d60286aa54f2bac3c014e
		Secure: true
	Object:
		Variable: r13
		Type: byte[]
		Statement: r13 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String getHashValue(java.security.MessageDigest)>
		SHA-256: acaabce49f3e0d66fb097dafa1899ebfd0608b504ed4eee33a57a33a0c4be41a
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: a6000b1e1827bef0eb33370d79dc70b0e71a9082db77ad9cc47a27e67a4b9e4e
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.SecretKey
		Statement: r7 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r6)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: df0cf4bbcb7a726ce08aa149538b939e00c703c301b969042aca8fbd028a36b1
		Secure: true
	Object:
		Variable: $r25
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer950)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 917571d74652624c88acdec11b71ab8e429aa118b7b01e78e12a913d582406ea
		Secure: true
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 4e9172e15ae59c57ba948ae0cca64533f79a9729fc803d4bc365e91e5bf93a16
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer938)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.security.MessageDigest startHash()>
		SHA-256: d49ae15d9a3030cdf6927bfe4ab035aa8168e626a80295dc2ed79b1a201b40e7
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ee5df1c6044bfbda4919c9745f944fc02907f76b68b7c0d02c8178d4ae12ffb0
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: byte[] getSecureRandom()>
		SHA-256: 15a16e5d42119f1cd2b4dc62a6efe10e5e68452d3ee258dfc3d5b49899d6b591
		Secure: true
	Object:
		Variable: $r26
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r13)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: ffa2c9aef666fd8bc0e184eb221dd3175f7fdd3d03dfec44b2291a1a2e53640e
		Secure: true
	Object:
		Variable: r17
		Type: java.io.ByteArrayOutputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 366ea224876fca07cf0ae284f77f5313d7fa7539a16d208e7c517940bd8becab
		Secure: true
	Object:
		Variable: r22
		Type: javax.crypto.SecretKeyFactory
		Statement: r22 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer945)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 35b22be792a6de7695faba418ac168ac8c2535e3b37910dea657cec94f2fd2b1
		Secure: false
	Object:
		Variable: varReplacer949
		Type: int
		Statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: f68250ff2711720e90ca182921b3ab39e50403d3e51619f80df84603f0fbeca5
		Secure: true
	Object:
		Variable: r21
		Type: java.io.ByteArrayInputStream
		Statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 68a7b7c0f2259393c41b8c93c72d8b2aa2aa78dc481e7604f0a682b72e15e963
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: byte[] getSecureRandom()>
		SHA-256: 44f84af28711983ddf975cbf40fd638f08c22abb116cba37ce67e03274c6ed0c
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer947)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 822d9d988a9fbed75e9647a319bc974e007e9a870a42e8406e5c723311e600fc
		Secure: true
	Object:
		Variable: $r24
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: 5c74ae1a1e83331aff748f5a2cf370f26b29c44de28ea19073a400b6a39b8ef3
		Secure: true
	Object:
		Variable: varReplacer950
		Type: java.lang.String
		Statement: specialinvoke $r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer950)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])>
		SHA-256: e03f1c7b0f08dacf35e09ab945486d3053c0053a841edf614f7535faa6ac62a9
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
		Method: <org.apache.manifoldcf.core.system.ManifoldCF: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 357bdbf403bd261daaa27114857ed456186ca78efb67944a08c43b7122c0691c
		Secure: true

Findings in Java Class: org.apache.manifoldcf.core.system.ManifoldCF

	 in Method: java.security.MessageDigest startHash()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d49ae15d9a3030cdf6927bfe4ab035aa8168e626a80295dc2ed79b1a201b40e7)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer938)
			at line: 658


	 in Method: java.lang.String getHashValue(java.security.MessageDigest)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d49ae15d9a3030cdf6927bfe4ab035aa8168e626a80295dc2ed79b1a201b40e7)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r13 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
			at line: 689


	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
			at line: 802

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #357bdbf403bd261daaa27114857ed456186ca78efb67944a08c43b7122c0691c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
			at line: 802

		TypestateError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #ee5df1c6044bfbda4919c9745f944fc02907f76b68b7c0d02c8178d4ae12ffb0)
			Unexpected call to method close on object of type javax.crypto.CipherOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke r7.<javax.crypto.CipherOutputStream: void close()>()
			at line: 808

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #822d9d988a9fbed75e9647a319bc974e007e9a870a42e8406e5c723311e600fc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, updateAAD, wrap, doFinal
			at statement: specialinvoke $r20.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r17, r5)
			at line: 802


	 in Method: javax.crypto.Cipher getCipher(org.apache.manifoldcf.core.interfaces.IThreadContext,int,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #822d9d988a9fbed75e9647a319bc974e007e9a870a42e8406e5c723311e600fc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, updateAAD, wrap, doFinal
			at statement: return $r4
			at line: 722


	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #822d9d988a9fbed75e9647a319bc974e007e9a870a42e8406e5c723311e600fc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, updateAAD, wrap, doFinal
			at statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
			at line: 847

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #a6000b1e1827bef0eb33370d79dc70b0e71a9082db77ad9cc47a27e67a4b9e4e)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r28.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r8, $r10)
			at line: 848

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4e9172e15ae59c57ba948ae0cca64533f79a9729fc803d4bc365e91e5bf93a16)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
			at line: 847

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r27.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r21, r22)
			at line: 847


	 in Method: javax.crypto.Cipher getCipher(java.lang.String,int,java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5c74ae1a1e83331aff748f5a2cf370f26b29c44de28ea19073a400b6a39b8ef3)
			Third parameter (with value 1024) Variable iterationCount must be at least 10000
			at statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
			at line: 731

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #35b22be792a6de7695faba418ac168ac8c2535e3b37910dea657cec94f2fd2b1)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r22 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer945)
			at line: 730

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer950)
			at line: 735

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5c74ae1a1e83331aff748f5a2cf370f26b29c44de28ea19073a400b6a39b8ef3)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
			at line: 731

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5c74ae1a1e83331aff748f5a2cf370f26b29c44de28ea19073a400b6a39b8ef3)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
			at line: 731

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r11, r14)
			at line: 737

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKey
			Return value was not properly generated as generatedKey
			at statement: r7 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r6)
			at line: 732

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r5, varReplacer948, varReplacer949)
			at line: 731

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: r7 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r6)
			at line: 732

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5c74ae1a1e83331aff748f5a2cf370f26b29c44de28ea19073a400b6a39b8ef3)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r7 = virtualinvoke r22.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r6)
			at line: 732


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 19

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 1
	HardCodedError: 1
	TypestateError: 2
	IncompleteOperationError: 7
	RequiredPredicateError: 7
	ConstraintError: 3

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 19
		CryptoAnalysisTime (in ms): 410
		CallgraphConstructionTime (in ms): 1142
		CallgraphReachableMethods: 4239
		CallgraphReachableMethodsWithActiveBodies: 2706
		DataflowVisitedMethods: 13
=========================================================================
java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/meecrowave/meecrowave-core/meecrowave-core-1.2.0-SNAPSHOT.jarRuleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)>
		SHA-256: 45521255c2fb065624a47e3b6a0c6c8a352b28af01515dd11e9fc71d7c907729
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1008)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: eff47090c8dd854bf1698ba07325cbadcb62da530189df7f80c0758eaeea24b7
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: $r7 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: 4fa663db076446ec0a940ebd6589a56ccec94fb887aa1cb5959eb380977cad5e
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: java.lang.String apply(java.lang.String)>
		SHA-256: 41974fb45104b9c8e4e59b52e3294a02b208378c32dd272a47d9b5e4769a67da
		Secure: true
	Object:
		Variable: varReplacer1004
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
		Method: <org.apache.meecrowave.Meecrowave$ValueTransformers$1: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)>
		SHA-256: b20cc1bfaeb9cd6d733e574b1bb1d3d1ba66035d009e8f3af0d89c6c375cb02e
		Secure: true

Findings in Java Class: org.apache.meecrowave.Meecrowave$ValueTransformers$1

	 in Method: void <init>(org.apache.meecrowave.Meecrowave$ValueTransformers)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
			at line: 1999

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #45521255c2fb065624a47e3b6a0c6c8a352b28af01515dd11e9fc71d7c907729)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1004)
			at line: 1999


	 in Method: java.lang.String apply(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #eff47090c8dd854bf1698ba07325cbadcb62da530189df7f80c0758eaeea24b7)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1008)
			at line: 2016

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1006, $r5)
			at line: 2017


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 5

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 2

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 5
		CryptoAnalysisTime (in ms): 292
		CallgraphConstructionTime (in ms): 832
		CallgraphReachableMethods: 4230
		CallgraphReachableMethodsWithActiveBodies: 2666
		DataflowVisitedMethods: 14
=========================================================================

java -cp /Users//Downloads/CryptoAnalysis-3.1.0-jar-with-dependencies.jar  crypto.HeadlessCryptoScanner --rulesDir /Users//Downloads/JCA-CrySL-rules  --appPath /Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/tomee/container/openejb-core/openejb-core-7.0.5-SNAPSHOT.jarRuleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4000)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 6e9f6d83d62a0e37720d5f28b1c0c8ac374d29c63962f2d0ba1cbb570b0714d
		Secure: true
	Object:
		Variable: r18
		Type: java.security.MessageDigest
		Statement: r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: f495117e06c4d7112219a4b97f0fbdc579c0b3cf8ce86328baa60dbd09f22e1a
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: r6 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: d1c178257e4fcc60f4d59af98b9221152952fd9cfbd5fc9ea0817681760f76d9
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: a7e42d2472950df3023f4d4de9b57ec65923dcba02211e7601285216bf502958
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 2fc0978f6d8929ee8ae35aaebfaa3b1c2587e9bfc8bde5d8c84fc5dba79cd209
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: f9b6e79e6436b7166c2ac91d2a565ae568e45ff52185cae80ec4edaa75b81688
		Secure: true
	Object:
		Variable: varReplacer4001
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: 3338a18f0c87b33a4bba77f146e0f5c3e0123cd5e3298a6b3abcbbf8104d5469
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: e157cb0e43177eadf338f5b45e3dff0a7dc46175e97fcd45d948747e41b3fae5
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3995)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 5599bce96d892bcfd6cd081fe8de0f399a12b27fcec3d4477c8c901ccdf8494d
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 67cb753e4899dbc20334528edfc96801c9fca8d56b085b98af4816dadd552871
		Secure: true
	Object:
		Variable: $r44
		Type: java.security.SecureRandom
		Statement: specialinvoke $r44.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.openejb.assembler.DeployerEjb: void <clinit>()>
		SHA-256: 3947fbed03fb6619f4b7d8ab85b9737a81cf934f621f6d49555045636b7d9954
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r4 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 73ebb2cc20f9ce8d39279c736f504458e30327685b576cc8f6e3a4722f919d25
		Secure: true

Findings in Java Class: org.apache.openejb.cipher.StaticDESPasswordCipher

	 in Method: char[] encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5599bce96d892bcfd6cd081fe8de0f399a12b27fcec3d4477c8c901ccdf8494d)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3995)
			at line: 58

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3996, $r3)
			at line: 60


	 in Method: java.lang.String decrypt(char[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6e9f6d83d62a0e37720d5f28b1c0c8ac374d29c63962f2d0ba1cbb570b0714d)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4000)
			at line: 85

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3999, $r5)
			at line: 87


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
			at line: 39

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f9b6e79e6436b7166c2ac91d2a565ae568e45ff52185cae80ec4edaa75b81688)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4001)
			at line: 39


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 12

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 3

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 12
		CryptoAnalysisTime (in ms): 19146
		CallgraphConstructionTime (in ms): 4282
		CallgraphReachableMethods: 17310
		CallgraphReachableMethodsWithActiveBodies: 13076
		DataflowVisitedMethods: 12164
=========================================================================
/Users//Downloads/ApacheCryptoAPI-Bench-main/apache_codes/wicket/wicket-util/wicket-util-8.0.0-SNAPSHOT.jar
Ruleset:
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	java.security.cert.CertificateFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.KeyGenerator
	java.security.SecureRandom
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.spec.X509EncodedKeySpec
	java.security.KeyFactory
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.PrivateKey
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor
	java.security.MessageDigest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLParameters
	javax.crypto.Cipher
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	javax.crypto.SecretKeyFactory
	java.net.PasswordAuthentication
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.KeyManagerFactory
	java.security.PublicKey
	java.security.cert.PKIXParameters
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.DigestInputStream

Analyzed Objects:
	Object:
		Variable: r2
		Type: javax.crypto.SecretKeyFactory
		Statement: r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.SecretKey generateSecretKey()>
		SHA-256: 6c8c74c2c7edf3c0260b3e6317162c27b8a62b98c0de605ff729939bbfb569c6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: void <clinit>()>
		SHA-256: 3b00a7df65d58aabe4706b81563f0b7d4b9bff8d2c104af6c02d5dcd7ddc492e
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: byte[] crypt(byte[],int)>
		SHA-256: 5233aa3396c1d006af5c80479cdd37d21ca5c39bb19899bcdd569a96440e936b
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.Cipher createCipher(javax.crypto.SecretKey,java.security.spec.AlgorithmParameterSpec,int)>
		SHA-256: 5105ffd7fab84127c36174e54bb3ab1aa7bf3c05cc78ba01fea8cea360cb2f68
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: javax.crypto.SecretKey generateSecretKey()>
		SHA-256: 6f4e74150477f72003b6d1b46b8f5b1ade1e17964ea04bc055a4d1222b85f4c7
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.wicket.util.crypt.SunJceCrypt: byte[] crypt(byte[],int)>
		SHA-256: fd96e3925320f9bd0a59abfe1da73389fbddde03b98d76c4af089135ad2c5c3f
		Secure: true

Findings in Java Class: org.apache.wicket.util.crypt.SunJceCrypt

	 in Method: java.security.spec.KeySpec createKeySpec()
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r3)
			at line: 154


	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #3b00a7df65d58aabe4706b81563f0b7d4b9bff8d2c104af6c02d5dcd7ddc492e)
			Second parameter (with value 17) Variable iterationCount must be at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)
			at line: 56

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer281)
			at line: 56


	 in Method: javax.crypto.SecretKey generateSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
			at line: 138

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKey
			Return value was not properly generated as generatedKey
			at statement: $r4 = virtualinvoke r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
			at line: 138


	 in Method: javax.crypto.Cipher createCipher(javax.crypto.SecretKey,java.security.spec.AlgorithmParameterSpec,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r3, r4)
			at line: 117

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r3, r4)
			at line: 117

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedPrivkey OR generatedPubkey OR generatedKey
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r3, r4)
			at line: 117


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 50
	Number of Objects Analyzed: 6

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 6
	ForbiddenMethodError: 1
	ConstraintError: 1

	Additional analysis statistics:
		SoftwareID:
		SeedObjectCount: 6
		CryptoAnalysisTime (in ms): 16087
		CallgraphConstructionTime (in ms): 981
		CallgraphReachableMethods: 5253
		CallgraphReachableMethodsWithActiveBodies: 3203
		DataflowVisitedMethods: 2360
=========================================================================
