[
  {
    "misuse": "misuse type(e.g. Broken Crypto Algorithm)",
    "vulnerable_method": "Cipher(String name) {\nthis(name, new byte[0]), new AlgorithmParameterSpec();\n}",
    "vulnerable_code": null,
    "description": "The 'This' constructor is deprecated (and equivalent to '\nfinal Cipher cipher = Cipher.getInstance(name, new AlgorithmParameterSpec());') and the later one is a dangerous version of `getInstance` method since it does not explicitly define an algorithm parameter specification to be used when creating the Cipher instance..Refer secure coding guidelines for more details.",
    "recommendation": "So always prefer the getInstance(String algorithm, String provider, AlgorithmParameterSpec params) version over the getInstance(String algorithm) overload."
  },
  {
    "misuse": "misuse type(e.g. Broken Crypto Algorithm)",
    "vulnerable_method": "Cipher(String name, String provider) {\nthis(name, Provider.provider(provider));\n}",
    "vulnerable_code": null,
    "description": "The 'This' constructor is deprecated (and equivalent to '\nfinal Cipher cipher = Cipher.getInstance(name, Provider.provider(provider));') and the later one is a dangerous version of `getInstance` method since it does not explicitly define an algorithm parameter specification to be used when creating the Cipher instance.Refer secure coding guidelines for more details.",
    "recommendation": "So always prefer the getInstance(String algorithm, String provider, AlgorithmParameterSpec params) version over the getInstance(String algorithm, String provider) overload."
  },
  {
    "misuse": "misuse type(e.g. Broken Crypto Algorithm)",
    "vulnerable_method": "Cipher(String algorithm, Provider provider) {\nthis(algorithm, new AlgorithmParameterSpec(), provider);\n}",
    "vulnerable_code": null,
    "description": "The 'This' constructor is deprecated (and equivalent to '\nfinal Cipher cipher = Cipher.getInstance(algorithm, new AlgorithmParameterSpec(), provider);') and the later one is a dangerous version of `getInstance` method since it does not explicitly define an algorithm parameter specification to be used when creating the Cipher instance..Refer secure coding guidelines for more details.",
    "recommendation": "So always prefer the getInstance(String algorithm, String provider, AlgorithmParameterSpec params) version over the getInstance(String algorithm, Provider provider) overload."
  },
  {
    "misuse": "misuse type(e.g. Broken Crypto Algorithm)",
    "vulnerable_method": "Cipher(String s, AlgorithmParameterSpec spec, String s1) {\nthis(s, Provider.provider(s1), spec);\n}",
    "vulnerable_code": null,
    "description": "The 'This' constructor is deprecated (and equivalent to '\nfinal Cipher cipher = Cipher.getInstance(s, Provider.provider(s1), spec);') and the later one is a dangerous version of `getInstance` method since it does not explicitly define an algorithm parameter specification to be used when creating the Cipher instance..Refer secure coding guidelines for more details.",
    "recommendation": "So always prefer the getInstance(String algorithm, String provider, AlgorithmParameterSpec params) version over the getInstance(String s, AlgorithmParameterSpec spec, String s1) overload."
  }
]