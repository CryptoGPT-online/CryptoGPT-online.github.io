[
  {
    "misuse": "Broken Crypto Algorithm",
    "vulnerable_method": "Cipher.getInstance(transformation)",
    "vulnerable_code": "if (provider != null) {\n                cipher = Cipher.getInstance(transformation, provider);\n            } else {\n                cipher = Cipher.getInstance(transformation);\n            }",
    "description": "The hardcoded `transformation` string may contain an insecure cipher algorithm, such as DES or RC4.",
    "recommendation": "Use a more secure cipher algorithm, such as AES or ChaCha20."
  },
  {
    "misuse": "Weak Key Generation",
    "vulnerable_method": "SecureRandom.getInstance()",
    "vulnerable_code": "SecureRandom random = context.get(SecureRandom.class);",
    "description": "The `SecureRandom` instance may not be properly initialized with a cryptographically secure random number generator (CSPRNG).",
    "recommendation": "Use a strong CSPRNG, such as `SecureRandom.getInstanceStrong()`."
  }
]